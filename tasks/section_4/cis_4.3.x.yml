---

- name: "4.3.1 | PATCH | Ensure nftables base chains exist"
  when:
    - rhel9cis_rule_4_3_1
  tags:
    - level1-server
    - level1-workstation
    - patch
    - nftables
    - rule_4.3.1
    - NIST800-55_CA-9
  block:
    - name: "4.3.1 | AUDIT | Ensure nftables base chains exist | Get current chains for INPUT"
      ansible.builtin.shell: nft list ruleset | grep 'hook input'
      changed_when: false
      failed_when: false
      register: rhel9cis_4_3_1_input_chains

    - name: "4.3.1 | AUDIT | Ensure nftables base chains exist | Get current chains for FORWARD"
      ansible.builtin.shell: nft list ruleset | grep 'hook forward'
      changed_when: false
      failed_when: false
      register: rhel9cis_4_3_1_forward_chains

    - name: "4.3.1 | AUDIT | Ensure nftables base chains exist | Get current chains for OUTPUT"
      ansible.builtin.shell: nft list ruleset | grep 'hook output'
      changed_when: false
      failed_when: false
      register: rhel9cis_4_3_1_output_chains

    - name: "4.3.1 | AUDIT | Ensure nftables base chains exist | Display chains for review"
      when: not rhel9cis_nft_tables_autochaincreate
      ansible.builtin.debug:
        msg:
          - "Below are the current INPUT chains"
          - "{{ rhel9cis_4_3_1_input_chains.stdout_lines }}"
          - "Below are the current FORWARD chains"
          - "{{ rhel9cis_4_3_1_forward_chains.stdout_lines }}"
          - "Below are teh current OUTPUT chains"
          - "{{ rhel9cis_4_3_1_output_chains.stdout_lines }}"

    - name: "4.3.1 | PATCH | Ensure nftables base chains exist | Create chains if needed"
      when: rhel9cis_nft_tables_autochaincreate
      ansible.builtin.shell: "{{ item }}"
      failed_when: false
      loop:
        - nft create chain inet "{{ rhel9cis_nft_tables_tablename }}" input { type filter hook input priority 0 \; }
        - nft create chain inet "{{ rhel9cis_nft_tables_tablename }}" forward { type filter hook forward priority 0 \; }
        - nft create chain inet "{{ rhel9cis_nft_tables_tablename }}" output { type filter hook output priority 0 \; }

- name: "4.3.2 | PATCH | Ensure nftables established connections are configured"
  when:
    - rhel9cis_rule_4_3_2
  tags:
    - level1-server
    - level1-workstation
    - patch
    - nftables
    - rule_4.3.2
    - NIST800-55_CA-9
  block:
    - name: "4.3.2 | AUDIT | Ensure nftables established connections are configured | Gather incoming connection rules"
      ansible.builtin.shell: nft list ruleset | awk '/hook input/,/}/' | grep -E 'ip protocol (tcp|udp|icmp) ct state'
      changed_when: false
      failed_when: false
      register: rhel9cis_4_3_2_inconnectionrule

    - name: "4.3.2| AUDIT | Ensure nftables established connections are configured | Gather outbound connection rules"
      ansible.builtin.shell: nft list ruleset | awk '/hook output/,/}/' | grep -E 'ip protocol (tcp|udp|icmp) ct state'
      changed_when: false
      failed_when: false
      register: rhel9cis_4_3_2_outconnectionrule

    - name: "4.3.2| PATCH | Ensure nftables established connections are configured | Add input tcp established accept policy"
      when: '"ip protocol tcp ct state established accept" not in rhel9cis_4_3_2_inconnectionrule.stdout'
      ansible.builtin.command: nft add rule inet "{{ rhel9cis_nft_tables_tablename }}" input ip protocol tcp ct state established accept

    - name: "4.3.2 | PATCH | Ensure nftables established connections are configured | Add input udp established accept policy"
      when: '"ip protocol udp ct state established accept" not in rhel9cis_4_3_2_inconnectionrule.stdout'
      ansible.builtin.command: nft add rule inet "{{ rhel9cis_nft_tables_tablename }}" input ip protocol udp ct state established accept

    - name: "4.3.2 | PATCH | Ensure nftables established connections are configured | Add input icmp established accept policy"
      when: '"ip protocol icmp ct state established accept" not in rhel9cis_4_3_2_inconnectionrule.stdout'
      ansible.builtin.command: nft add rule inet "{{ rhel9cis_nft_tables_tablename }}" input ip protocol icmp ct state established accept

    - name: "4.3.2 | PATCH | Ensure nftables established connections are configured | Add output tcp new, related, established accept policy"
      when: '"ip protocol tcp ct state established,related,new accept" not in rhel9cis_4_3_2_outconnectionrule.stdout'
      ansible.builtin.command: nft add rule inet "{{ rhel9cis_nft_tables_tablename }}" output ip protocol tcp ct state new,related,established accept

    - name: "4.3.2 | PATCH | Ensure nftables established connections are configured | Add output udp new, related, established accept policy"
      when: '"ip protocol udp ct state established,related,new accept" not in rhel9cis_4_3_2_outconnectionrule.stdout'
      ansible.builtin.command: nft add rule inet "{{ rhel9cis_nft_tables_tablename }}" output ip protocol udp ct state new,related,established accept

    - name: "4.3.2 | PATCH | Ensure nftables established connections are configured | Add output icmp new, related, established accept policy"
      when: '"ip protocol icmp ct state established,related,new accept" not in rhel9cis_4_3_2_outconnectionrule.stdout'
      ansible.builtin.command: nft add rule inet "{{ rhel9cis_nft_tables_tablename }}" output ip protocol icmp ct state new,related,established accept

- name: "4.3.3 | PATCH | Ensure nftables default deny firewall policy"
  when:
    - rhel9cis_rule_4_3_3
  tags:
    - level1-server
    - level1-workstation
    - patch
    - nftables
    - rule_4.3.3
    - NIST800-55_CA-9
  block:
    - name: "4.3.3 | AUDIT | Ensure nftables default deny firewall policy | Check for hook input deny policy"
      ansible.builtin.shell: nft list table inet "{{ rhel9cis_nft_tables_tablename }}" | grep 'hook input'
      failed_when: false
      changed_when: false
      register: rhel9cis_4_3_3_inputpolicy

    - name: "4.3.3 | AUDIT | Ensure nftables default deny firewall policy | Check for hook forward deny policy"
      ansible.builtin.shell: nft list table inet "{{ rhel9cis_nft_tables_tablename }}" | grep 'hook forward'
      failed_when: false
      changed_when: false
      register: rhel9cis_4_3_3_forwardpolicy

    - name: "4.3.3 | AUDIT | Ensure nftables default deny firewall policy | Check for hook output deny policy"
      ansible.builtin.shell: nft list table inet "{{ rhel9cis_nft_tables_tablename }}" | grep 'hook output'
      failed_when: false
      changed_when: false
      register: rhel9cis_4_3_3_outputpolicy

    - name: "4.3.3 | AUDIT | Ensure nftables default deny firewall policy | Check for SSH allow"
      ansible.builtin.shell: nft list table inet "{{ rhel9cis_nft_tables_tablename }}" | grep 'ssh'
      failed_when: false
      changed_when: false
      register: rhel9cis_4_3_3_sshallowcheck

    - name: "4.3.3 | PATCH | Ensure nftables default deny firewall policy | Enable SSH traffic"
      when: '"tcp dport ssh accept" not in rhel9cis_4_3_3_sshallowcheck.stdout'
      ansible.builtin.command: nft add rule inet "{{ rhel9cis_nft_tables_tablename }}" input tcp dport ssh accept

    - name: "4.3.3 | PATCH | Ensure nftables default deny firewall policy | Set hook input deny policy"
      when: '"type filter hook input priority 0; policy drop;" not in rhel9cis_4_3_3_inputpolicy.stdout'
      ansible.builtin.command: nft chain inet "{{ rhel9cis_nft_tables_tablename }}" input { policy drop \; }

    - name: "4.3.3 | PATCH | Ensure nftables default deny firewall policy | Create hook forward deny policy"
      when: '"type filter hook forward priority 0; policy drop;" not in rhel9cis_4_3_3_forwardpolicy.stdout'
      ansible.builtin.command: nft chain inet "{{ rhel9cis_nft_tables_tablename }}" forward { policy drop \; }

    - name: "4.3.3 | PATCH | Ensure nftables default deny firewall policy | Create hook output deny policy"
      when: '"type filter hook output priority 0; policy drop;" not in rhel9cis_4_3_3_outputpolicy.stdout'
      ansible.builtin.command: nft chain inet "{{ rhel9cis_nft_tables_tablename }}" output { policy drop \; }

- name: "4.3.4 | PATCH | Ensure nftables loopback traffic is configured"
  when:
    - rhel9cis_rule_4_3_4
  tags:
    - level1-server
    - level1-workstation
    - patch
    - nftables
    - rule_4.3.4
    - NIST800-55_CA-9
  block:
    - name: "4.3.4 | AUDIT | Ensure nftables loopback traffic is configured | Gather iif lo accept existence | nftables"
      ansible.builtin.shell: nft list ruleset | awk '/hook input/,/}/' | grep 'iif "lo" accept'
      changed_when: false
      failed_when: false
      register: rhel9cis_4_3_4_iiflo

    - name: "4.3.4 | AUDIT | Ensure nftables loopback traffic is configured | Gather ip saddr existence | nftables"
      ansible.builtin.shell: nft list ruleset | awk '/hook input/,/}/' | grep 'ip saddr'
      changed_when: false
      failed_when: false
      register: rhel9cis_4_3_4_ipsaddr

    - name: "4.3.4 | AUDIT | Ensure nftables loopback traffic is configured | Gather ip6 saddr existence | nftables"
      ansible.builtin.shell: nft list ruleset | awk '/hook input/,/}/' | grep 'ip6 saddr'
      changed_when: false
      failed_when: false
      register: rhel9cis_4_3_4_ip6saddr

    - name: "4.3.4 | PATCH | Ensure nftables loopback traffic is configured | Set iif lo accept rule | nftables"
      when: '"iif \"lo\" accept" not in rhel9cis_4_3_4_iiflo.stdout'
      ansible.builtin.command: nft add rule inet "{{ rhel9cis_nft_tables_tablename }}" input iif lo accept

    - name: "4.3.4 | PATCH | Ensure nftables loopback traffic is configured | Set ip sddr rule | nftables"
      when: '"ip saddr 127.0.0.0/8 counter packets 0 bytes 0 drop" not in rhel9cis_4_3_4_ipsaddr.stdout'
      ansible.builtin.command: nft add rule inet "{{ rhel9cis_nft_tables_tablename }}" input ip saddr 127.0.0.0/8 counter drop

    - name: "4.3.4 | PATCH | Ensure nftables loopback traffic is configured | Set ip6 saddr rule | nftables"
      when: '"ip6 saddr ::1 counter packets 0 bytes 0 drop" not in rhel9cis_4_3_4_ip6saddr.stdout'
      ansible.builtin.command: nft add rule inet "{{ rhel9cis_nft_tables_tablename }}" input ip6 saddr ::1 counter drop
